package com.mygdx.ZombieHouse;	

import com.badlogic.gdx.Game; 
import com.badlogic.gdx.Gdx; 
import com.badlogic.gdx.Input.Keys; 
import com.badlogic.gdx.InputProcessor; 
import com.badlogic.gdx.graphics.GL20; 
import com.badlogic.gdx.graphics.Texture; 
import com.badlogic.gdx.graphics.g2d.SpriteBatch; 
import com.badlogic.gdx.graphics.g2d.TextureRegion; 

public class mainZombieHouse extends Game{
	private SpriteBatch batch;
	private TextureRegion heroRegion;
	private float heroX, heroY, heroWidth, heroHeight, scale, rotation;
	
	private mainZombieHouse(){}
	
	private static final mainZombieHouse instance=new mainZombieHouse();
	
	public static mainZombieHouse getInstance(){
		return instance;
	}
	
	class MyInputListener implements InputProcessor{
		public boolean keyDown(int keycode){
			switch (keycode){
			case Keys.UP: heroY+=5; break;
			case Keys.DOWN: heroY-=5; break;
			case Keys.RIGHT: heroX+=5; break;
			case Keys.LEFT: heroX-=5; break;
			case Keys.EQUALS: scale+=0.1f; break;
			case Keys.MINUS: scale-=0.1f; break;
			}
			return false;
		}
		
		public boolean keyUp(int keycode){return false;}
		public boolean keyTyped(char key){return false;}		
		public boolean touchUp(int screenX, int screenY, int pointer, int button) {
			return false;
		}
		public boolean mouseMoved(int screenX, int screenY){return false;}
		
		public boolean touchDown(int screenX, int screenY, int pointer, int button) {
			heroX=screenX-heroWidth/2;
            heroY = Gdx.graphics.getHeight() - screenY + heroHeight/2; 
            return true;
		}
		
		public boolean touchDragged(int screenX, int screenY, int pointer) {
			heroX=screenX-heroWidth/2;
            heroY = Gdx.graphics.getHeight() - screenY + heroHeight/2; 
            return true;
		}
		
		public boolean scrolled(int amount){
			rotation+=amount*5;
			return true;
		}
		
	}
	
	public void create(){
		batch=new SpriteBatch();
		heroRegion=new TextureRegion(new Texture("quads.png"));
		heroX=100;
		heroY=100;
		heroWidth=100;
		heroHeight=100;
		scale=1;
		rotation=0;
		
		Gdx.input.setInputProcessor(new MyInputListener());
	}
	
	public void render(){
		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		batch.begin();
		batch.draw(heroRegion, heroX, heroY, heroWidth/2, heroHeight/2, heroWidth, heroHeight,scale, scale, rotation);
		batch.end();
	}
}